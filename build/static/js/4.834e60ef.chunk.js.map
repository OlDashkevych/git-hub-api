{"version":3,"sources":["views/HomePage/HomePage.module.css","services/api.js","components/Search/index.tsx","redux/posts/operations.js","components/ResultsList/index.tsx","views/HomePage/index.tsx"],"names":["module","exports","axios","defaults","baseURL","query","get","Search","dispatch","useDispatch","useState","setQuery","useEffect","a","type","types","GET_POSTS_START","api","data","status","Error","GET_POSTS_SUCCESS","payload","items","GET_POSTS_FAILURE","getUsers","className","minLength","debounceTimeout","onChange","target","value","historyArr","history","localStorage","getItem","JSON","parse","unshift","length","setItem","stringify","ResultsList","searchHistory","setHistory","useSelector","getItems","map","e","key","id","login","src","avatar_url","alt","rel","href","html_url","HomeView","styles","title"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,0B,oJCC1BC,IAAMC,SAASC,QAAU,0BAEV,MACH,SAAAC,GAAK,OAAIH,IAAMI,IAAN,yBAA4BD,KCyClCE,EAxCA,WACb,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOL,EAAP,KAAcM,EAAd,KA0BA,OARAC,qBAAU,WAKRJ,EAJKH,ECxBe,SAAAA,GAAK,8CAAI,WAAMG,GAAN,mBAAAK,EAAA,6DAC/BL,EAAS,CAAEM,KAAMC,IAAMC,kBADQ,kBAGEC,EAAaZ,GAHf,mBAGrBa,EAHqB,EAGrBA,QAAMC,EAHe,EAGfA,QAED,KAAOA,GAAU,KALD,sBAKY,IAAIC,MAAM,yBALtB,OAM7BZ,EAAS,CAAEM,KAAMC,IAAMM,kBAAmBC,QAASJ,EAAKK,QAN3B,kDAQ7Bf,EAAS,CACPM,KAAMC,IAAMS,oBATe,0DAAJ,sDD4BhBC,CAASpB,GAHP,CAAES,KAAM,iBAIlB,CAACN,EAAUH,IAGZ,yBAAKqB,UAAU,oBACb,kBAAC,gBAAD,CACEA,UAAU,eACVC,UAAW,EACXC,gBAAiB,IACjBC,SA9BoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BnB,EAASmB,EAAOC,OAChB,IACIC,EADEC,EAAUC,aAAaC,QAAQ,WAGjCF,IACFD,EAAU,YAAOI,KAAKC,MAAMJ,KACjBK,QAAQR,EAAOC,OAC1BC,EAAWO,OAAS,GAEpBP,EAAa,CAACF,EAAOC,OAGvBG,aAAaM,QAAQ,UAAWJ,KAAKK,UAAUT,S,QEmBpCU,EAtCK,WAClB,MAAoChC,mBAAS,IAA7C,mBAAOiC,EAAP,KAAsBC,EAAtB,KACMrB,EAAQsB,YAAYC,KACpBb,EAAUC,aAAaC,QAAQ,WAOrC,OANAvB,qBAAU,WACJqB,GACFW,EAAWR,KAAKC,MAAMJ,MAEvB,CAACA,IAGF,yBAAKP,UAAU,qBACZiB,EAAcJ,OAAS,EACtB,yBAAKb,UAAU,kBAAf,kBACkB,IACfiB,EAAcI,KAAI,SAAAC,GACjB,GAAKA,EACL,MAAM,GAAN,OAAUA,EAAV,WAIJ,GAEF,wBAAItB,UAAU,gBACXH,EAAMwB,KAAI,SAAAC,GAAC,OACV,wBAAItB,UAAU,eAAeuB,IAAKD,EAAEE,IAClC,4BAAKF,EAAEG,OACP,yBAAKzB,UAAU,iBAAiB0B,IAAKJ,EAAEK,WAAYC,IAAI,KACvD,uBAAGxB,OAAO,SAASyB,IAAI,sBAAsBC,KAAMR,EAAES,UAArD,kB,kBChBGC,UAVY,WACzB,OACE,oCACE,wBAAIhC,UAAWiC,IAAOC,OAAtB,4BACA,kBAAC,EAAD,MACA,kBAAC,EAAD","file":"static/js/4.834e60ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__2lu1I\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.github.com/';\n\nexport default {\n  getUsers: query => axios.get(`search/users?q=${query}`),\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { DebounceInput } from 'react-debounce-input';\nimport { useDispatch } from 'react-redux';\nimport { getUsers } from '../../redux/posts/operations';\n\nconst Search = () => {\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = ({ target }) => {\n    setQuery(target.value);\n    const history = localStorage.getItem('history');\n    let historyArr;\n\n    if (history) {\n      historyArr = [...JSON.parse(history)];\n      historyArr.unshift(target.value);\n      historyArr.length = 5;\n    } else {\n      historyArr = [target.value];\n    }\n\n    localStorage.setItem('history', JSON.stringify(historyArr));\n  };\n\n  useEffect(() => {\n    if (!query) {\n      dispatch({ type: 'CLEAR_LIST' });\n      return;\n    }\n    dispatch(getUsers(query));\n  }, [dispatch, query]);\n\n  return (\n    <div className=\"search-container\">\n      <DebounceInput\n        className=\"search-input\"\n        minLength={1}\n        debounceTimeout={500}\n        onChange={handleQueryChange}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import types from '../types';\nimport api from '../../services/api';\n\nexport const getUsers = query => async dispatch => {\n  dispatch({ type: types.GET_POSTS_START });\n  try {\n    const { data, status } = await api.getUsers(query);\n\n    if (status < 200 && status >= 300) throw new Error('Something went wrong!');\n    dispatch({ type: types.GET_POSTS_SUCCESS, payload: data.items });\n  } catch (e) {\n    dispatch({\n      type: types.GET_POSTS_FAILURE,\n    });\n  }\n};\nexport const aaa = {};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getItems } from '../../redux/posts/selector';\n\nconst ResultsList = () => {\n  const [searchHistory, setHistory] = useState([]);\n  const items = useSelector(getItems);\n  const history = localStorage.getItem('history');\n  useEffect(() => {\n    if (history) {\n      setHistory(JSON.parse(history));\n    }\n  }, [history]);\n\n  return (\n    <div className=\"results-container\">\n      {searchHistory.length > 0 ? (\n        <div className=\"search-history\">\n          search-history:{' '}\n          {searchHistory.map(e => {\n            if (!e) return;\n            return `${e} | `;\n          })}\n        </div>\n      ) : (\n        ''\n      )}\n      <ul className=\"results-list\">\n        {items.map(e => (\n          <li className=\"results-item\" key={e.id}>\n            <h5>{e.login}</h5>\n            <img className=\"results-avatar\" src={e.avatar_url} alt=\"\" />\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={e.html_url}>\n              To page\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ResultsList;\n","import React from 'react';\nimport Search from '../../components/Search';\nimport ResultsList from '../../components/ResultsList';\n\nimport styles from './HomePage.module.css';\n\nconst HomeView: React.FC = () => {\n  return (\n    <>\n      <h1 className={styles.title}>Git hub users search app</h1>\n      <Search />\n      <ResultsList />\n    </>\n  );\n};\n\nexport default HomeView;\n"],"sourceRoot":""}